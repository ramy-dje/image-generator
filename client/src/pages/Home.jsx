import React,{useEffect,useState} from 'react';
import { FormField,Card,Loader } from '../Components';



const RenderCard = ({data,title})=>{
console.log(data[0]);
  if(data?.length > 0)
    return data.map((post)=>(<Card key={post._id} {...post}/>))
  else{
    return(
      <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>
    )
  }

}

const Home = () => {
  const [loading, setLoading] = useState(true);
  const [allPosts, setAllPosts] = useState([]);
  const [searchText, setSearchText] = useState('');
  const [searchResult, setSearchResult] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null)
  useEffect(()=>{
    const fetchPosts = async ()=>{
      setLoading(true);
      try{
        const response =await fetch('http://localhost:3000/api/v1/post',{method:'GET',headers:{'Content-Type':'application/json'}});
        if(response.ok){
          const result = await response.json();
          console.log(result)
          setAllPosts(result.data.reverse());
        }
      }catch(e){
        alert(e)
      }finally{
        setLoading(false);
      }
    }
    fetchPosts();
 },[]) 

  function handleSearch(e){
    setSearchText(e.target.value);
   setSearchResult(allPosts.filter((item)=> item.name.toLowerCase().includes(searchText.toLowerCase()) 
    || allPosts.filter((item)=> item.prompt.toLowerCase().includes(searchText.toLowerCase()))   ));
    console.log(searchResult)
        
    
    
  }
  return (
    <section className='max-w-7xl mx-auto '>
      <div >
        <h1 className='font-extrabold text-[#222328] text-[32px]'>The Community Showcase </h1>
        <p className='mt-2 text-[#666e75] text-[1px] max-w-[500px]'>
          browse throught a collection of imaginative and visualy stunning images generated by DALL-E AI
        </p>
      </div>
      <div className='mt-16'>
        <FormField  
        labelName='search post'
        name='text'
        type='text'
        value={searchText}
        placeHolder='search post '
        handleChange={handleSearch}
        />
      </div>
      <div className='mt-10'>
        {loading ?(
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ):(
          <>
            {searchText &&(
              <h2 className='font-medium text-xl text-[#666e75] mb-3'>
                showing results for <span className='text-[#222328]'>{searchText}</span>
              </h2>
            )}
            <div className='grid lg:grid-cols-4 sm:grid-col-3 xl:grid-col-2 grid-cols-1 gap-3'>
              {searchText ? (
              <RenderCard data={searchResult} title='No search results found'/> ):(
                <RenderCard data={allPosts} title='no posts found'/>
              )

              }
            </div>
          </>
        )}
      </div>

    </section>
  )
}

export default Home